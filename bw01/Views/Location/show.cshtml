 @using DataRepository.Models
@model LocationViewModel

<div id="map"></div>

<script type="text/javascript">
    var jLocations=[];
</script>

@foreach (var item in Model.locations)
{
    <script type="text/javascript">
    @*jLocations.push(google.maps.LatLng(@(item.Latitude),@(item.Longitude)));*@
    </script>
}




<script type="text/javascript">

    var map;
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: -34.397, lng: 150.644 },
            zoom: 8
        });
    }

    var myLatLng = {lat: -25.363, lng: 131.044};

    // Create a map object and specify the DOM element for display.
    var map = new google.maps.Map(document.getElementById('map'), {
        center: myLatLng,
        scrollwheel: false,
        zoom: 4
    });

    // Create a marker and set its position.
    var marker = new google.maps.Marker({
        map: map,
        position: myLatLng,
        title: 'Hello World!'
    });

        for (i=0; i< jLocations.length; i++)
        {
            var marker = new google.maps.Marker({
                position: locations[i],
                title: title,
                map: map,
                draggable: false
            });

        }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBC-S6ZRqoD9CrpdCKEnQWn9mzFDGZxWzI&callback=initMap"></script>
 @*@Html.Raw(HttpUtility.HtmlDecode(Html.DrawMap("AIzaSyBC-S6ZRqoD9CrpdCKEnQWn9mzFDGZxWzI", "/Location/GetMarkers", "550", "400")));*@




